let subEventInfo=null,bossInfo=null,minibossInfo=null,dungeonInfo=null,siegeInfo=null,pointOfInterestInfo=null;class ConnectionError extends Error{constructor(e){super(e),this.name="ConnectionError"}}async function initEventInfo(){if(null===subEventInfo){const e=await fetch("https://eclipseblade.github.io/Remnant-World-Analyzer/events.json");if(!e.ok)throw new ConnectionError("Could Not Read Items");const n=await e.json();subEventInfo=n.subEvents,bossInfo=n.bosses,minibossInfo=n.minibosses,dungeonInfo=n.dungeons,siegeInfo=n.sieges,pointOfInterestInfo=n.pointOfInterests}}function deepCloneEvent({zone:e,eventDetails:n}){return{zone:e,eventDetails:n.map(({eventType:e,eventName:n,eventLink:t})=>({eventType:e,eventName:[...n],eventLink:[...t]}))}}function deepCloneSubEvent({eventType:e,eventName:n,eventLink:t}){return{eventType:e,eventName:[...n],eventLink:[...t]}}function getWorld(e){switch(e.toLowerCase()){case"city":return"Earth";case"wasteland":return"Rhom";case"swamp":return"Corsus";case"jungle":return"Yaesha";case"snow":return"Reisum";default:throw new Error("Invalid Location: "+e)}}function analyzeCampaign(e){}async function analyzeAdventure(e){const n=e.indexOf("_C",e.lastIndexOf("/Quests/Quest_"));if(-1===n)throw new Error("Invalid File Input");const t=e.lastIndexOf("Adventure",n);if(-1===t)throw new Error("Invalid File Input");const o=e.substring(t,n).split(/Game/g),r=getWorld(o[0].split(/_/)[1]);o.splice(0,1),await initEventInfo();const s={order:5,zone:["Overworld"],eventDetails:[]},i=(e,n)=>"Item Drop"===e.eventType?"Item Drop"===n.eventType?e.eventName[0]>n.eventName[0]?1:e.eventName[0]<n.eventName[0]?-1:0:1:"Item Drop"===n.eventType?-1:0,a=o.reduce((n,t)=>{const o=t.split(/\/Quest_/)[1].split(/_/);switch(o[0].toLowerCase()){case"event":if(!(o[1]in subEventInfo))throw new Error("Invalid Item: "+o[1]);const t=deepCloneSubEvent(subEventInfo[o[1]]);if(t){if("Sketterling"===o[1]){let n=-1;if(-1===(n="Mines"===o[2]?e.lastIndexOf("Sketterling_Bugs",e.indexOf("Sketterling_Mines")):e.lastIndexOf("Sketterling_Bugs")))throw new Error("Could Not Read Color of Sketterling");t.eventName[0]=("_"===e.charAt(n+48)?"Black":"Red")+t.eventName[0]}"CreepersPeepers"===o[1]||"Packmaster"===o[1]?s.eventDetails.push(t):n[n.length-1].eventDetails.push(t)}break;case"boss":if(!(o[1]in bossInfo))throw new Error("Invalid Boss: "+o[1]);const i={order:0,...deepCloneEvent(bossInfo[o[1]])};n.push(i);break;case"miniboss":if(!(o[1]in minibossInfo))throw new Error("Invalid Miniboss: "+o[1]);const a={order:1,...deepCloneEvent(minibossInfo[o[1]])};n.push(a);break;case"smalld":if(!(o[1]in dungeonInfo))throw new Error("Invalid Dungeon: "+o[1]);const l={order:2,...deepCloneEvent(dungeonInfo[o[1]])};n.push(l);break;case"siege":if(!(o[1]in siegeInfo))throw new Error("Invalid Siege: "+o[1]);const d={order:3,...deepCloneEvent(siegeInfo[o[1]])};n.push(d);break;case"overworldpoi":if(!(o[1]in pointOfInterestInfo))throw new Error("Invalid Point of Interest: "+o[1]);"Stuck Merchant"===o[1]&&n.push({order:4,...deepCloneEvent(dungeonInfo.GuardianShrine)}),s.eventDetails=pointOfInterestInfo[o[1]].map(e=>deepCloneSubEvent(e)).concat(s.eventDetails),n.push(s);break;case"cryptolith":"Rhom"===r&&n[n.length-1].eventDetails.push({eventType:"Item Drop: Ring",eventName:["Soul Link"],eventLink:["https://remnantfromtheashes.wiki.fextralife.com/Soul+Link"]});break;default:throw new Error("Invalid Event: "+o[0])}return n},[]).sort((e,n)=>e.order-n.order).map(({zone:e,eventDetails:n})=>({zone:e,eventDetails:n.sort(i)}));return{world:r,worldEvents:a}}function renderTable({world:e,worldEvents:n}){$("#world-info").empty();for(const{zone:t,eventDetails:o}of n){let n=0;2==t.length&&("Strange Pass"===t[0]&&n++,n++);for(let r=0;r<o.length;r++){const{eventType:s,eventName:i,eventLink:a}=o[r];let l=`<tr><td>${e}</td><td>${t[0]}`;r<n&&(l+=` (${t[1]})`),l+=`</td><td>${s}</td><td class="hyperlink">`;for(let e=0;e<a.length;e++)l+=`<a href="${a[e]}"  target="_blank">${i[e]}</a>`,e!==a.length-1&&(3===a.length?l+=" or ":"Houndmaster"===i[0]||"Wud"===i[0]?l+=" and ":l+=": ");l+="</td></tr>",$("#world-info").append(l)}}$("#connection-error").hide(),$("#form-file").removeClass("is-invalid"),$("#world-descriptor").show()}$("#world-input").submit(async e=>{e.preventDefault(),$("#loading").show();const n=$("#form-file")[0].files[0],t=new FileReader;t.readAsText(n),t.onload=(async()=>{try{let e=null;"Campaign"===$("#mode-select").val()?$("#mode-select").addClass("is-invalid"):($("#mode-select").removeClass("is-invalid"),e=await analyzeAdventure(t.result)),e&&renderTable(e)}catch(e){e instanceof ConnectionError?$("#connection-error").show():$("#form-file").addClass("is-invalid"),console.log(e)}$("#loading").hide()}),t.onerror=(()=>{$("#form-file").addClass("is-invalid"),console.log(t.error),$("#loading").hide()})});